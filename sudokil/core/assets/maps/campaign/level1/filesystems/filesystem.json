{
deviceName : pip-boy,
name : pip-boy,
children: 
[
	{
		class: FolderCLI,
		name: camera,
		children: 
		[
			{
				class: ItemCLI,
				name: camera.dev,
			},
			{
				class: ScriptCLI,
				name: start.sh,
				usage: "start.sh \n\t description: camera starts render to screen",
				event:
				{
					class : ToggleMapRenderEvent,
					shouldRender : true,
				}
			},
			{
				class: ScriptCLI,
				name: target.sh,
				usage: "target.sh entity_id \n\t description: camera targets and follows an entity \n\t entity_id: name of target entity",
				event:
				{
					class: CameraTargetEvent,
				}
			},
			{
				class: ScriptCLI,
				name: reset.sh,
				usage: "reset.sh \n\t description: reset camera to original zoom and position",
				event:
				{
					class: CameraResetEvent,
				}
			},
		]
	},
	{
		class: FolderCLI,
		name: robot1,
		children: 
		[
			{
				class: ItemCLI,
				name: robot1.dev,
			},
			{
				class: ScriptCLI,
				name: forward.sh,
				usage: "forward.sh [distance] \n\t description: robot moves forwards \n\t distance: distance to move",
				event:
				{
					class: ForwardEvent
				}
			},
			{
				class: ScriptCLI,
				name: backward.sh,
				usage: "backward.sh [distance] \n\t description: robot moves backwards \n\t distance: distance to move",
				event:
				{
					class: BackwardEvent
				}
			},
			{
				class: ScriptCLI,
				name: left.sh,
				usage: "left.sh [num] \n\t description: rotates robot 90 degrees counter-clockwise \n\t num: number of times to rotate",
				event:
				{
					class: LeftEvent
				}
			},
			{
				class: ScriptCLI,
				name: right.sh,
				usage: "right.sh [num] \n\t description: rotates robot 90 degrees clockwise \n\t num: number of times to rotate",
				event:
				{
					class: RightEvent
				}
			},
			{
				class: ScriptCLI,
				name: lift.sh,
				usage: "lift.sh \n\t description: lifts the object directly in front of the robot",
				event:
				{
					class: LiftEvent
				}
			},
			{
				class: ScriptCLI,
				name: lower.sh,
				usage: "lower.sh \n\t description: lowers the object directly in front of the robot",
				event:
				{
					class: LowerEvent
				}
			},
		]
	},
	{
		class: FolderCLI,
		name: robot2,
		children: 
		[
			{
				class: ItemCLI,
				name: robot2.dev,
			},
			{
				class: ScriptCLI,
				name: forward.sh,
				usage: "forward.sh [distance] \n\t description: robot moves forwards \n\t distance: distance to move",
				event:
				{
					class: ForwardEvent
				}
			},
			{
				class: ScriptCLI,
				name: backward.sh,
				usage: "backward.sh [distance] \n\t description: robot moves backwards \n\t distance: distance to move",
				event:
				{
					class: BackwardEvent
				}
			},
			{
				class: ScriptCLI,
				name: left.sh,
				usage: "left.sh [num] \n\t description: rotates robot 90 degrees counter-clockwise \n\t num: number of times to rotate",
				event:
				{
					class: LeftEvent
				}
			},
			{
				class: ScriptCLI,
				name: right.sh,
				usage: "right.sh [num] \n\t description: rotates robot 90 degrees clockwise \n\t num: number of times to rotate",
				event:
				{
					class: RightEvent
				}
			},
			{
				class: ScriptCLI,
				name: connect.sh,
				usage: "connect.sh \n\t description: connects terminal to device directly in front of robot",
				event:
				{
					class: com.custardgames.sudokil.events.entities.commands.WiredConnectEvent
				}
			},
			{
				class: ScriptCLI,
				name: disconnect.sh,
				usage: "disconnect.sh \n\t description: stops connection between robot and computer console",
				event:
				{
					class: com.custardgames.sudokil.events.entities.commands.DisconnectEvent
				}
			}
		]
	},
	{
		class: FolderCLI,
		name: robot3,
		children: 
		[
			{
				class: ItemCLI,
				name: robot3.dev,
			},
			{
				class: ScriptCLI,
				name: forward.sh,
				usage: "forward.sh [distance] \n\t description: robot moves forwards \n\t distance: distance to move",
				event:
				{
					class: ForwardEvent
				}
			},
			{
				class: ScriptCLI,
				name: backward.sh,
				usage: "backward.sh [distance] \n\t description: robot moves backwards \n\t distance: distance to move",
				event:
				{
					class: BackwardEvent
				}
			},
			{
				class: ScriptCLI,
				name: left.sh,
				usage: "left.sh [num] \n\t description: rotates robot 90 degrees counter-clockwise \n\t num: number of times to rotate",
				event:
				{
					class: LeftEvent
				}
			},
			{
				class: ScriptCLI,
				name: right.sh,
				usage: "right.sh [num] \n\t description: rotates robot 90 degrees clockwise \n\t num: number of times to rotate",
				event:
				{
					class: RightEvent
				}
			},
		]
	},
]
}